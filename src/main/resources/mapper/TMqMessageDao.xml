<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.distributed.transaction.dao.TMqMessageDao">
  <resultMap id="BaseResultMap" type="com.example.distributed.transaction.model.TMqMessage">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="biz_id" jdbcType="BIGINT" property="bizId" />
    <result column="biz_type" jdbcType="TINYINT" property="bizType" />
    <result column="msg_result" jdbcType="TINYINT" property="msgResult" />
    <result column="msg_desc" jdbcType="VARCHAR" property="msgDesc" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="try_count" jdbcType="INTEGER" property="tryCount" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.example.distributed.transaction.model.TMqMessage">
    <result column="msg" jdbcType="LONGVARCHAR" property="msg" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, biz_id, biz_type, msg_result, msg_desc, create_time, try_count
  </sql>
  <sql id="Blob_Column_List">
    msg
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.example.distributed.transaction.model.TMqMessageExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_mq_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByExample" parameterType="com.example.distributed.transaction.model.TMqMessageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_mq_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_mq_message
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_mq_message
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.distributed.transaction.model.TMqMessageExample">
    delete from t_mq_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.distributed.transaction.model.TMqMessage" useGeneratedKeys="true">
    insert into t_mq_message (biz_id, biz_type, msg_result, 
      msg_desc, create_time, try_count, 
      msg)
    values (#{bizId,jdbcType=BIGINT}, #{bizType,jdbcType=TINYINT}, #{msgResult,jdbcType=TINYINT}, 
      #{msgDesc,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{tryCount,jdbcType=INTEGER}, 
      #{msg,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.distributed.transaction.model.TMqMessage" useGeneratedKeys="true">
    insert into t_mq_message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bizId != null">
        biz_id,
      </if>
      <if test="bizType != null">
        biz_type,
      </if>
      <if test="msgResult != null">
        msg_result,
      </if>
      <if test="msgDesc != null">
        msg_desc,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="tryCount != null">
        try_count,
      </if>
      <if test="msg != null">
        msg,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bizId != null">
        #{bizId,jdbcType=BIGINT},
      </if>
      <if test="bizType != null">
        #{bizType,jdbcType=TINYINT},
      </if>
      <if test="msgResult != null">
        #{msgResult,jdbcType=TINYINT},
      </if>
      <if test="msgDesc != null">
        #{msgDesc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tryCount != null">
        #{tryCount,jdbcType=INTEGER},
      </if>
      <if test="msg != null">
        #{msg,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.distributed.transaction.model.TMqMessageExample" resultType="java.lang.Long">
    select count(*) from t_mq_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_mq_message
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.bizId != null">
        biz_id = #{record.bizId,jdbcType=BIGINT},
      </if>
      <if test="record.bizType != null">
        biz_type = #{record.bizType,jdbcType=TINYINT},
      </if>
      <if test="record.msgResult != null">
        msg_result = #{record.msgResult,jdbcType=TINYINT},
      </if>
      <if test="record.msgDesc != null">
        msg_desc = #{record.msgDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tryCount != null">
        try_count = #{record.tryCount,jdbcType=INTEGER},
      </if>
      <if test="record.msg != null">
        msg = #{record.msg,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_mq_message
    set id = #{record.id,jdbcType=BIGINT},
      biz_id = #{record.bizId,jdbcType=BIGINT},
      biz_type = #{record.bizType,jdbcType=TINYINT},
      msg_result = #{record.msgResult,jdbcType=TINYINT},
      msg_desc = #{record.msgDesc,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      try_count = #{record.tryCount,jdbcType=INTEGER},
      msg = #{record.msg,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_mq_message
    set id = #{record.id,jdbcType=BIGINT},
      biz_id = #{record.bizId,jdbcType=BIGINT},
      biz_type = #{record.bizType,jdbcType=TINYINT},
      msg_result = #{record.msgResult,jdbcType=TINYINT},
      msg_desc = #{record.msgDesc,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      try_count = #{record.tryCount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.distributed.transaction.model.TMqMessage">
    update t_mq_message
    <set>
      <if test="bizId != null">
        biz_id = #{bizId,jdbcType=BIGINT},
      </if>
      <if test="bizType != null">
        biz_type = #{bizType,jdbcType=TINYINT},
      </if>
      <if test="msgResult != null">
        msg_result = #{msgResult,jdbcType=TINYINT},
      </if>
      <if test="msgDesc != null">
        msg_desc = #{msgDesc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tryCount != null">
        try_count = #{tryCount,jdbcType=INTEGER},
      </if>
      <if test="msg != null">
        msg = #{msg,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.distributed.transaction.model.TMqMessage">
    update t_mq_message
    set biz_id = #{bizId,jdbcType=BIGINT},
      biz_type = #{bizType,jdbcType=TINYINT},
      msg_result = #{msgResult,jdbcType=TINYINT},
      msg_desc = #{msgDesc,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      try_count = #{tryCount,jdbcType=INTEGER},
      msg = #{msg,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.distributed.transaction.model.TMqMessage">
    update t_mq_message
    set biz_id = #{bizId,jdbcType=BIGINT},
      biz_type = #{bizType,jdbcType=TINYINT},
      msg_result = #{msgResult,jdbcType=TINYINT},
      msg_desc = #{msgDesc,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      try_count = #{tryCount,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>